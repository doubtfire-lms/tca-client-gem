=begin
#Turnitin Core API

#Turnitin Core API (TCA) provides direct API access to the core functionality provided by Turnitin. TCA supports file submission, similarity report generation, group management, and visualization of report matches via Cloud Viewer or PDF download. Below is the full flow to successfully set up an integration scope, an API Key, and make calls to TCA. Integration Scope and API Key management is done via the Admin Console UI by logging in as an admin user. For more details, go to our [developer portal documentation page](https://developers.turnitin.com/docs). ## Integration Scope and API Key Management TCA API calls must provide an API Key for authentication, so you must first have at least one integration scope associated with at least one API Key to use TCA. ### Admin Console UI First, login to Admin Console UI as an *Admin* user with permission to create Integration Scopes, under a tenant that is licensed to use the TCA product Integration Scopes (you can create a new one, or add keys to existing)    * Click `Integrations` in the side bar --> `+ Add Integration` at top the top of the page --> Enter a name --> `Add` Button   API Keys   * Click `Integrations` in the side bar --> `Create API Key` Button next to a given Integration Scope -->   Enter a name --> click `Create and View button`   * Copy/Save the key manually or click save to clipboard button to copy it (this is the only time it will show)  ## TCA Flow    *  Register a webhook   *  Create a submission   *  Upload a file for the submission   *  Wait for the submission upload to process      * If you registered a webhook, a callback will be sent to it when upload is complete      * The status of the *submission* will also update to `COMPLETE`   *  Request a Similarity Report   *  Wait for similarity report to process      * If you registered a webhook, a callback will be sent to it when report is complete      * The status of the *report* will also be updated to `COMPLETE`   *  Request a URL with parameters to view the Similarity Report 

OpenAPI spec version: 1.0.249

Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 3.0.35
=end

require 'spec_helper'
require 'json'

# Unit tests for TCAClient::SimilarityApi
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'SimilarityApi' do
  before do
    # run before each test
    @instance = TCAClient::SimilarityApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of SimilarityApi' do
    it 'should create an instance of SimilarityApi' do
      expect(@instance).to be_instance_of(TCAClient::SimilarityApi)
    end
  end

  # unit tests for download_similarity_report_pdf
  # GET download pdf
  # @param x_turnitin_integration_name a human readable string representing the type of integration being used
  # @param x_turnitin_integration_version the version of the integration platform being used
  # @param id The Submission ID (returned upon a successful POST to /submissions) 
  # @param pdf_id The Pdf ID (returned upon a successful POST to /submissions/{submission_id}/similarity/pdf) 
  # @param [Hash] opts the optional parameters
  # @return [String]
  describe 'download_similarity_report_pdf test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_similarity_report_pdf_status
  # GET pdf download status
  # @param x_turnitin_integration_name a human readable string representing the type of integration being used
  # @param x_turnitin_integration_version the version of the integration platform being used
  # @param id The Submission ID (returned upon a successful POST to /submissions) 
  # @param pdf_id The Pdf ID (returned upon a successful POST to /submissions/{submission_id}/similarity/pdf) 
  # @param [Hash] opts the optional parameters
  # @return [PdfStatusResponse]
  describe 'get_similarity_report_pdf_status test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_similarity_report_results
  # Get Similarity Report Results
  # @param x_turnitin_integration_name a human readable string representing the type of integration being used
  # @param x_turnitin_integration_version the version of the integration platform being used
  # @param id The Submission ID (returned upon a successful POST to /submissions) 
  # @param [Hash] opts the optional parameters
  # @return [SimilarityMetadata]
  describe 'get_similarity_report_results test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_similarity_report_url
  # Returns a URL to access Cloud Viewer
  # @param body 
  # @param x_turnitin_integration_name a human readable string representing the type of integration being used
  # @param x_turnitin_integration_version the version of the integration platform being used
  # @param id The Submission ID (returned upon a successful POST to /submissions) 
  # @param [Hash] opts the optional parameters
  # @return [SimilarityViewerUrlResponse]
  describe 'get_similarity_report_url test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for request_similarity_report
  # Request Similarity Report generation
  # @param body 
  # @param x_turnitin_integration_name a human readable string representing the type of integration being used
  # @param x_turnitin_integration_version the version of the integration platform being used
  # @param id The Submission ID (returned upon a successful POST to /submissions) 
  # @param [Hash] opts the optional parameters
  # @return [SuccessMessage]
  describe 'request_similarity_report test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for request_similarity_report_pdf
  # Request Pdf download and returns the Pdf Id
  # @param x_turnitin_integration_name a human readable string representing the type of integration being used
  # @param x_turnitin_integration_version the version of the integration platform being used
  # @param id The Submission ID (returned upon a successful POST to /submissions) 
  # @param [Hash] opts the optional parameters
  # @return [RequestPdfResponse]
  describe 'request_similarity_report_pdf test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
